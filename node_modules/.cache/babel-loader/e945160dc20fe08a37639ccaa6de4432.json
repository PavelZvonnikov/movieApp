{"ast":null,"code":"var _jsxFileName = \"/home/pavel/git/reactwarriors-movie-app/src/components/Movies/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\nexport default class MovieList extends Component {\n  constructor() {\n    super();\n\n    this.getMovies = (filters, page) => {\n      const sort_by = filters.sort_by,\n            year = filters.year;\n      const link = \"\".concat(API_URL, \"/discover/movie?api_key=\").concat(API_KEY_3, \"&language=ru-RU&sort_by=\").concat(sort_by, \"&page=\").concat(page, \"&primary_release_year=\").concat(year);\n      fetch(link).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          movies: data.results\n        });\n      });\n    };\n\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    // const {\n    //   filters: { sort_by }\n    // } = this.props;\n    // const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}`;\n    // fetch(link)\n    //   .then(response => {\n    //     return response.json();\n    //   })\n    //   .then(data => {\n    //     this.setState({\n    //       movies: data.results\n    //     });\n    //   });\n    this.getMovies(this.props.filters, this.props.page);\n  } // componentWillReceiveProps(nextProps) {\n  //   console.log(\"props\", this.props, \"nextProps\", nextProps);\n  //   if (nextProps.filters.sort_by !== this.props.filters.sort_by) {\n  //     // const {\n  //     //   filters: { sort_by }\n  //     // } = nextProps;\n  //     // const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}`;\n  //     // fetch(link)\n  //     //   .then(response => {\n  //     //     return response.json();\n  //     //   })\n  //     //   .then(data => {\n  //     //     this.setState({\n  //     //       movies: data.results\n  //     //     });\n  //     //   });\n  //     this.getMovies(nextProps);\n  //   }\n  // }\n\n\n  componentDidUpdate(prevProps) {\n    console.log(\"componentDidUpdate\", prevProps.page, this.props.page);\n\n    if (this.props.filters.sort_by !== prevProps.filters.sort_by) {\n      this.props.onChangePage(1);\n      this.getMovies(this.props.filters, 1);\n    }\n\n    if (this.props.page !== prevProps.page) {\n      this.getMovies(this.props.filters, this.props.page);\n    }\n\n    if (this.props.filters.year !== prevProps.filters.year) {\n      this.getMovies(this.props.filters, this.props.page);\n    }\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, movies.map(movie => {\n      return React.createElement(\"div\", {\n        key: movie.id,\n        className: \"col-6 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(MovieItem, {\n        item: movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/pavel/git/reactwarriors-movie-app/src/components/Movies/MoviesList.jsx"],"names":["React","Component","MovieItem","API_URL","API_KEY_3","MovieList","constructor","getMovies","filters","page","sort_by","year","link","fetch","then","response","json","data","setState","movies","results","state","componentDidMount","props","componentDidUpdate","prevProps","console","log","onChangePage","render","map","movie","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/CK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,SARc,GAQF,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAAA,YACrBC,OADqB,GACHF,OADG,CACrBE,OADqB;AAAA,YACZC,IADY,GACHH,OADG,CACZG,IADY;AAG7B,YAAMC,IAAI,aAAMT,OAAN,qCAAwCC,SAAxC,qCAA4EM,OAA5E,mBAA4FD,IAA5F,mCAAyHE,IAAzH,CAAV;AACAE,MAAAA,KAAK,CAACD,IAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,IAAI,CAACG;AADD,SAAd;AAGD,OARH;AASD,KArBa;;AAGZ,SAAKC,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAiBDG,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKf,SAAL,CAAe,KAAKgB,KAAL,CAAWf,OAA1B,EAAmC,KAAKe,KAAL,CAAWd,IAA9C;AACD,GAvC8C,CAwC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,SAAS,CAAChB,IAA5C,EAAkD,KAAKc,KAAL,CAAWd,IAA7D;;AACA,QAAI,KAAKc,KAAL,CAAWf,OAAX,CAAmBE,OAAnB,KAA+Be,SAAS,CAACjB,OAAV,CAAkBE,OAArD,EAA8D;AAC5D,WAAKa,KAAL,CAAWK,YAAX,CAAwB,CAAxB;AACA,WAAKrB,SAAL,CAAe,KAAKgB,KAAL,CAAWf,OAA1B,EAAmC,CAAnC;AACD;;AAED,QAAI,KAAKe,KAAL,CAAWd,IAAX,KAAoBgB,SAAS,CAAChB,IAAlC,EAAwC;AACtC,WAAKF,SAAL,CAAe,KAAKgB,KAAL,CAAWf,OAA1B,EAAmC,KAAKe,KAAL,CAAWd,IAA9C;AACD;;AAED,QAAI,KAAKc,KAAL,CAAWf,OAAX,CAAmBG,IAAnB,KAA4Bc,SAAS,CAACjB,OAAV,CAAkBG,IAAlD,EAAwD;AACtD,WAAKJ,SAAL,CAAe,KAAKgB,KAAL,CAAWf,OAA1B,EAAmC,KAAKe,KAAL,CAAWd,IAA9C;AACD;AACF;;AAEDoB,EAAAA,MAAM,GAAG;AAAA,UACCV,MADD,GACY,KAAKE,KADjB,CACCF,MADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,CAACW,GAAP,CAAWC,KAAK,IAAI;AACnB,aACE;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,QAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANA,CADH,CADF;AAWD;;AAzF8C","sourcesContent":["import React, { Component } from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\n\nexport default class MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: []\n    };\n  }\n\n  getMovies = (filters, page) => {\n    const { sort_by, year } = filters;\n\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${year}`;\n    fetch(link)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          movies: data.results\n        });\n      });\n  };\n\n  componentDidMount() {\n    // const {\n    //   filters: { sort_by }\n    // } = this.props;\n    // const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}`;\n    // fetch(link)\n    //   .then(response => {\n    //     return response.json();\n    //   })\n    //   .then(data => {\n    //     this.setState({\n    //       movies: data.results\n    //     });\n    //   });\n    this.getMovies(this.props.filters, this.props.page);\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   console.log(\"props\", this.props, \"nextProps\", nextProps);\n  //   if (nextProps.filters.sort_by !== this.props.filters.sort_by) {\n  //     // const {\n  //     //   filters: { sort_by }\n  //     // } = nextProps;\n  //     // const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}`;\n  //     // fetch(link)\n  //     //   .then(response => {\n  //     //     return response.json();\n  //     //   })\n  //     //   .then(data => {\n  //     //     this.setState({\n  //     //       movies: data.results\n  //     //     });\n  //     //   });\n  //     this.getMovies(nextProps);\n  //   }\n  // }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"componentDidUpdate\", prevProps.page, this.props.page);\n    if (this.props.filters.sort_by !== prevProps.filters.sort_by) {\n      this.props.onChangePage(1);\n      this.getMovies(this.props.filters, 1);\n    }\n\n    if (this.props.page !== prevProps.page) {\n      this.getMovies(this.props.filters, this.props.page);\n    }\n\n    if (this.props.filters.year !== prevProps.filters.year) {\n      this.getMovies(this.props.filters, this.props.page);\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className=\"row\">\n        {movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}